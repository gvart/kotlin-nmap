//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2018.04.21 at 04:21:44 PM EEST
//


package org.nmap4k.model

import java.math.BigDecimal
import javax.xml.bind.annotation.XmlAccessType
import javax.xml.bind.annotation.XmlAccessorType
import javax.xml.bind.annotation.XmlAttribute
import javax.xml.bind.annotation.XmlElement
import javax.xml.bind.annotation.XmlRootElement
import javax.xml.bind.annotation.XmlType


@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = ["scaninfo", "verbose", "debugging", "host", "runstats"])
@XmlRootElement(name = "nmaprun")
data class NmapRun (
    @XmlElement(required = true)
    var scaninfo: Scaninfo? = null,

    @XmlElement(required = true)
    var verbose: Verbose? = null,

    @XmlElement(required = true)
    var debugging: Debugging? = null,

    @XmlElement(required = true)
    var host: List<Host> = mutableListOf(),

    @XmlElement(required = true)
    var runstats: Runstats? = null,

    @XmlAttribute(name = "scanner")
    var scanner: String? = "",

    @XmlAttribute(name = "args")
    var args: String? = "",

    @XmlAttribute(name = "start")
    var start: Int? = null,

    @XmlAttribute(name = "startstr")
    var startstr: String? = "",

    @XmlAttribute(name = "version")
    var version: BigDecimal? = null,

    @XmlAttribute(name = "xmloutputversion")
    var xmlOutputVersion: BigDecimal? = null
)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
data class Debugging(
    @XmlAttribute(name = "level")
    var level: Int? = null
)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = ["status", "address", "hostnames", "ports", "times"])
data class Host (
    @XmlElement(required = true)
    var status: Status? = null,

    @XmlElement(required = true)
    var address: Address? = null,

    @XmlElement(required = true)
    var hostnames: Hostnames? = null,

    @XmlElement(required = true)
    var ports: Ports? = null,

    @XmlElement(required = true)
    var times: Times? = null,

    @XmlAttribute(name = "starttime")
    var starttime: Int? = null,

    @XmlAttribute(name = "endtime")
    var endtime: Int? = null
)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
data class Address (
    @XmlAttribute(name = "addr")
    var addr: String? = "",

    @XmlAttribute(name = "addrtype")
    var addrtype: String? = ""
)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = ["hostname"])
data class Hostnames (
    @XmlElement(required = true)
    var hostname: Hostname? = null
)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
data class Hostname (
    @XmlAttribute(name = "name")
    var name: String = "",

    @XmlAttribute(name = "type")
    var type: String = ""
)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = ["extraPorts", "port"])
data class Ports (
    @XmlElement(required = true, name = "extraports")
    var extraPorts: ExtraPorts? = null,

    @XmlElement(required = true)
    var port: List<Port> = mutableListOf()
)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = ["extraReasons"])
data class ExtraPorts (
   @XmlElement(required = true, name = "extrareasons")
    var extraReasons: ExtraReasons? = null,

        @XmlAttribute(name = "state")
    var state: String = "",

        @XmlAttribute(name = "count")
    var count: Int? = null
)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
data class ExtraReasons (
    @XmlAttribute(name = "reason")
    var reason: String = "",

    @XmlAttribute(name = "count")
    var count: Int? = null
)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = ["state", "service"])
data class Port (

    @XmlElement(required = true)
    var state: State? = null,

    @XmlElement(required = true)
    var service: Service? = null,

    @XmlAttribute(name = "protocol")
    var protocol: String = "",

    @XmlAttribute(name = "portid")
    var portid: Int? = null
)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
data class Service (
    @XmlAttribute(name = "name")
    var name: String = "",

    @XmlAttribute(name = "method")
    var method: String = "",

    @XmlAttribute(name = "conf")
    var conf: Int? = null

)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
data class State (
    @XmlAttribute(name = "state")
    var state: String = "",

    @XmlAttribute(name = "reason")
    var reason: String = "",

    @XmlAttribute(name = "reason_ttl")
    var reasonTtl: Int? = null

)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
data class Status (
    @XmlAttribute(name = "state")
    var state: String = "",

    @XmlAttribute(name = "reason")
    var reason: String = "",

    @XmlAttribute(name = "reason_ttl")
    var reasonTtl: Int? = null

)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
data class Times (
    @XmlAttribute(name = "srtt")
    var srtt: Int? = null,

    @XmlAttribute(name = "rttvar")
    var rttvar: Int? = null,

    @XmlAttribute(name = "to")
    var to: Int? = null
)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = ["finished", "hosts"])
data class Runstats (
    @XmlElement(required = true)
    var finished: Finished? = null,

    @XmlElement(required = true)
    var hosts: Hosts? = null
)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
data class Finished (
    @XmlAttribute(name = "time")
    var time: Int? = null,

    @XmlAttribute(name = "timestr")
    var timestr: String = "",

    @XmlAttribute(name = "elapsed")
    var elapsed: BigDecimal? = null,

    @XmlAttribute(name = "summary")
    var summary: String = "",

    @XmlAttribute(name = "exit")
    var exit: String = ""

)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
data class Hosts (
    @XmlAttribute(name = "up")
    var up: Int? = null,

    @XmlAttribute(name = "down")
    var down: Int? = null,

    @XmlAttribute(name = "total")
    var total: Int? = null
)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
data class Scaninfo (
    @XmlAttribute(name = "type")
    var type: String = "",

    @XmlAttribute(name = "protocol")
    var protocol: String = "",

    @XmlAttribute(name = "numservices")
    var numservices: Int? = null,

    @XmlAttribute(name = "services")
    var services: String = ""

)

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
data class Verbose (
    @XmlAttribute(name = "level")
    var level: Int? = null
)